q
params["id"]
params
q
y
q
params
q
new_user_url
q
@current_user
current_user
exit
session
@current_user
current_user
n
exit
user.is_password?("password")
user
n
s
q
User.all
User.where(username: "john")
user
n
creds
s
User.find_by_credentials(username: params["user"]["username"],
params
q
@cat
exit
User.where(username: params["cat"]["owner"]).first.attributes[:id]
User.where(username: params["cat"]["owner"]).first
User.where(params["cat"]["owner"]).first
User.where(username: "john")
q
params[:cat]
@params
q
attr_name
c
CATS_DB_FILE
n
ROOT_FOLDER
CATS_SQL_FILE
n
c
exit
@forgery_protection
c
q
y
exitq
exit
y
q
route_params
@params
c
@params
q
auth_token
@req.cookies
@req
c
q
y
q
@req.cookies
@req
q
@req
c
@req
name
c
q
@req.env["REQUEST_METHOD"]
@req["REQUEST_METHOD"]
@req
@req['REQUEST_METHOD']
q
exit
cookie_str
cookie+str
token
cookie
exit
c
name
c
name
c
name
c
name
c
name
c
name
exit
q
updated_flash
n
req.cookies
n
req.cookies
cookie
q
root_dir
q
extension
content_type
q
extension
q
extension[2]
extension[1]
extension[0]
extension
q
exit
y
q
extension
path
q
env['PATH_INFO']
res['PATH_INFO']
q
env
q
response[2].body[0]
response[2].body
response[1].body
response[1]
response[0]
response
q
match_data[:file_path]
root_path
n
match_data
n
e.backtrace.first
e.backtrace
e
q
code_file_info
exit
y
q
@code_preview
n
last_line
problem_line
first_line
q
code
q
code_file.readlines
code_file
exit
n
full_path
exit
match_data[:file_path]
match_data[:file_path].split("/")
File.expand_path(__FILE__).split("/")[0..-3]
full_path
q
full_path
match_data[:file_path]
match_data(:file_path)
full_path
exit
__FILE__
q
match_data[:file_path]
match_data
q
match_data
q
/(.+\/)+(.+\.rb:(\d+))/.match(top_line)
/.+/.match(top_line)
/(.+\/)+(.+\.rb:(<line_num>\d+))/.match(top_line)
top_line
match_data
q
match_data
top_line
q
source
